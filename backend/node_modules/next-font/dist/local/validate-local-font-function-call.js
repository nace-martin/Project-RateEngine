import{allowedDisplayValues as t}from"../constants.js";import{formatAvailableValues as e}from"../format-available-values.js";import{nextFontError as o}from"../next-font-error.js";let r={woff:"woff",woff2:"woff2",ttf:"truetype",otf:"opentype",eot:"embedded-opentype"};function a(a,f){a&&o("next/font/local has no named exports");let{src:n,display:p="swap",weight:l,style:i,fallback:s,preload:d=!0,variable:c,adjustFontFallback:y,declarations:m}=f||{};return t.includes(p)||o(`Invalid display value \`${p}\`.
Available display values: ${e(t)}`),n||o("Missing required `src` property"),Array.isArray(n)?0===n.length&&o("Unexpected empty `src` array."):n=[{path:n,weight:l,style:i}],n=n.map(t=>{let e=/\.(woff|woff2|eot|ttf|otf)$/.exec(t.path)?.[1];return e||o(`Unexpected file \`${t.path}\``),{...t,ext:e,format:r[e]}}),Array.isArray(m)&&m.forEach(t=>{["src","font-display","font-weight","font-style"].includes(t?.prop)&&o(`Invalid declaration prop: \`${t.prop}\``)}),{src:n,display:p,weight:l,style:i,fallback:s,preload:d,variable:c,adjustFontFallback:y,declarations:m}}export{a as validateLocalFontFunctionCall};
