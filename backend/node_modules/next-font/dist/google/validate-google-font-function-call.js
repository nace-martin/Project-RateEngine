import{allowedDisplayValues as e}from"../constants.js";import{formatAvailableValues as s}from"../format-available-values.js";import{nextFontError as a}from"../next-font-error.js";import{googleFontsMetadata as t}from"./google-fonts-metadata.js";function n(n,l){let{weight:o,style:i,preload:r=!0,display:f="swap",axes:b,fallback:d,adjustFontFallback:u=!0,variable:g,subsets:c}=l||{};""===n&&a("next/font/google has no default export");let h=n.replace(/_/g," "),v=t[h];v||a(`Unknown font \`${h}\``);let p=v.subsets;0===p.length?r=!1:r&&(c||a(`Preload is enabled but no subsets were specified for font \`${h}\`. Please specify subsets or disable preloading if your intended subset can't be preloaded.
Available subsets: ${s(p)}

Read more: https://nextjs.org/docs/messages/google-fonts-missing-subsets`),c.forEach(e=>{p.includes(e)||a(`Unknown subset \`${e}\` for font \`${h}\`.
Available subsets: ${s(p)}`)}));let $=v.weights,w=v.styles,y=o?[...new Set(Array.isArray(o)?o:[o])]:[],m=i?[...new Set(Array.isArray(i)?i:[i])]:[];return 0===y.length&&($.includes("variable")?y.push("variable"):a(`Missing weight for font \`${h}\`.
Available weights: ${s($)}`)),y.length>1&&y.includes("variable")&&a(`Unexpected \`variable\` in weight array for font \`${h}\`. You only need \`variable\`, it includes all available weights.`),y.forEach(e=>{$.includes(e)||a(`Unknown weight \`${e}\` for font \`${h}\`.
Available weights: ${s($)}`)}),0===m.length&&(1===w.length?m.push(w[0]):m.push("normal")),m.forEach(e=>{w.includes(e)||a(`Unknown style \`${e}\` for font \`${h}\`.
Available styles: ${s(w)}`)}),e.includes(f)||a(`Invalid display value \`${f}\` for font \`${h}\`.
Available display values: ${s(e)}`),b&&($.includes("variable")||a("Axes can only be defined for variable fonts."),"variable"!==y[0]&&a("Axes can only be defined for variable fonts when the weight property is nonexistent or set to `variable`.")),{fontFamily:h,weights:y,styles:m,display:f,preload:r,selectedVariableAxes:b,fallback:d,adjustFontFallback:u,variable:g,subsets:c}}export{n as validateGoogleFontFunctionCall};
