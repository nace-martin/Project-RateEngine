import{nextFontError as e}from"../next-font-error.js";import{findFontFilesInCss as t}from"./find-font-files-in-css.js";import{getFontAxes as o}from"./get-font-axes.js";import{getGoogleFontsUrl as l}from"./get-google-fonts-url.js";import{validateGoogleFontFunctionCall as a}from"./validate-google-font-function-call.js";let r=e=>{let t;return()=>(t||(t=e().then(e=>(t=e,e))),t)},n=/[|\\{}()[\]^$+*?.-]/,s=/[|\\{}()[\]^$+*?.-]/g,i=e=>n.test(e)?e.replace(s,"\\$&"):e,f=r(()=>import("./get-fallback-font-override-metrics.js").then(e=>e.default||e)),c=r(()=>import("./fetch-css-from-google-fonts.js").then(e=>e.default||e)),d=r(()=>import("./fetch-font-file.js").then(e=>e.default||e)),u=async({functionName:r,data:n,emitFontFile:s,isDev:u,isServer:g,loaderContext:m,cache:{css:h,font:p}={}})=>{let{fontFamily:w,weights:$,styles:v,display:F,preload:j,selectedVariableAxes:y,fallback:b,adjustFontFallback:x,variable:k,subsets:G}=a(r,n[0]),O=o(w,$,v,y),z=l(w,O,F),A=x?await (async()=>{let{getFallbackFontOverrideMetrics:e}=await f();return e(w)})():void 0,E={fallbackFonts:b,weight:1===$.length&&"variable"!==$[0]?$[0]:void 0,style:1===v.length?v[0]:void 0,variable:k,adjustFontFallback:A};try{let o=h?.has(z),l=null!=h&&o?h.get(z):await (async()=>{let{fetchCSSFromGoogleFonts:e}=await c();return await e(z,w,u).catch(e=>(console.error(e),null))})();o?h?.delete(z):h?.set(z,l??null),null==l&&e(`Failed to fetch \`${w}\` from Google Fonts.`),l=l.split("body {",1)[0];let a=t(l,j?G:void 0),r=await Promise.all(a.map(async({googleFontFileUrl:t,preloadFontFile:o})=>{let l=p?.has(t),a=null!=p&&l?p.get(t):await (async()=>{let{fetchFontFile:e}=await d();return await e(t,u).catch(e=>(console.error(e),null))})();l?p?.delete(t):p?.set(t,a??null),null==a&&e(`Failed to fetch \`${w}\` from Google Fonts.`);let r=/\.(woff|woff2|eot|ttf|otf)$/.exec(t)[1],n=s(a,r,o,!!A);return{googleFontFileUrl:t,selfHostedFileUrl:n}})),n=l;for(let{googleFontFileUrl:e,selfHostedFileUrl:t}of r)n=n.replace(RegExp(i(e),"g"),t);return{...E,css:n}}catch(e){if(u){g&&m.error(`Failed to download \`${w}\` from Google Fonts. Using fallback font instead.

${e.message}}`);let t=`@font-face {
  font-family: '${w} Fallback';
  src: local("${A?.fallbackFont??"Arial"}");`;return A&&(t+=`
  ascent-override:${A.ascentOverride};
  descent-override:${A.descentOverride};
  line-gap-override:${A.lineGapOverride};
  size-adjust:${A.sizeAdjust};`),t+="\n}",{...E,css:t}}throw e}};export{u as default};
