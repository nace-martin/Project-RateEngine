# Generated by Django 5.2.5 on 2025-09-01 09:20

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Providers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('provider_type', models.TextField()),
            ],
            options={
                'db_table': 'providers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Stations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('iata', models.TextField(unique=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ratecards',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('role', models.TextField()),
                ('scope', models.TextField()),
                ('direction', models.TextField()),
                ('audience', models.TextField(blank=True, null=True)),
                ('rate_strategy', models.CharField(blank=True, default='BREAKS', max_length=32, null=True)),
                ('currency', models.TextField()),
                ('source', models.TextField()),
                ('status', models.TextField()),
                ('effective_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('meta', models.JSONField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.providers')),
            ],
            options={
                'db_table': 'ratecards',
                'managed': True,
                'unique_together': {('provider', 'name', 'effective_date')},
            },
        ),
        migrations.CreateModel(
            name='RatecardConfig',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('dim_factor_kg_per_m3', models.DecimalField(decimal_places=2, max_digits=8)),
                ('rate_strategy', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('ratecard', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.ratecards')),
            ],
            options={
                'db_table': 'ratecard_config',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lanes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('airline', models.TextField(blank=True, null=True)),
                ('is_direct', models.BooleanField()),
                ('dest', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lanes_dest_set', to='rate_engine.stations')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.stations')),
                ('ratecard', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.ratecards')),
                ('via', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='lanes_via_set', to='rate_engine.stations')),
            ],
            options={
                'db_table': 'lanes',
                'managed': True,
                'unique_together': {('ratecard', 'origin', 'dest')},
            },
        ),
        migrations.CreateModel(
            name='LaneBreaks',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('break_code', models.TextField()),
                ('per_kg', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('lane', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.lanes')),
            ],
            options={
                'db_table': 'lane_breaks',
                'managed': True,
                'unique_together': {('lane', 'break_code')},
            },
        ),
        migrations.CreateModel(
            name='FeeTypes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
                ('description', models.TextField()),
                ('basis', models.TextField()),
                ('default_tax_pct', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'fee_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RatecardFees',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('currency', models.TextField()),
                ('amount', models.DecimalField(decimal_places=4, max_digits=12)),
                ('min_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('percent_of_code', models.TextField(blank=True, null=True)),
                ('per_kg_threshold', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('applies_if', models.JSONField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('fee_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.feetypes')),
                ('ratecard', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.ratecards')),
            ],
            options={
                'db_table': 'ratecard_fees',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CartageLadders',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('min_weight_kg', models.DecimalField(decimal_places=2, max_digits=12)),
                ('max_weight_kg', models.DecimalField(decimal_places=2, max_digits=12)),
                ('rate_per_kg', models.DecimalField(decimal_places=4, max_digits=12)),
                ('min_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('ratecard', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.ratecards')),
            ],
            options={
                'db_table': 'cartage_ladders',
                'managed': True,
                'unique_together': {('ratecard', 'min_weight_kg', 'max_weight_kg')},
            },
        ),
        migrations.CreateModel(
            name='StorageTiers',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group_code', models.TextField()),
                ('week_from', models.SmallIntegerField()),
                ('week_to', models.SmallIntegerField()),
                ('rate_per_kg_per_week', models.DecimalField(decimal_places=4, max_digits=12)),
                ('min_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('ratecard', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.ratecards')),
            ],
            options={
                'db_table': 'storage_tiers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField(unique=True)),
                ('name', models.TextField()),
                ('basis', models.TextField()),
            ],
            options={
                'db_table': 'services',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ServiceItems',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('currency', models.TextField()),
                ('amount', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('min_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('percent_of_service_code', models.TextField(blank=True, null=True)),
                ('tax_pct', models.DecimalField(decimal_places=2, max_digits=5)),
                ('item_code', models.TextField(blank=True, null=True)),
                ('conditions_json', models.JSONField()),
                ('ratecard', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.ratecards')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.services')),
            ],
            options={
                'db_table': 'service_items',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SellCostLinksSimple',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('mapping_type', models.TextField()),
                ('mapping_value', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('buy_fee_code', models.ForeignKey(db_column='buy_fee_code', on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.feetypes', to_field='code')),
                ('sell_item', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.serviceitems')),
            ],
            options={
                'db_table': 'sell_cost_links_simple',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CurrencyRates',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('as_of_ts', models.DateTimeField()),
                ('base_ccy', models.TextField()),
                ('quote_ccy', models.TextField()),
                ('rate', models.DecimalField(decimal_places=8, max_digits=18)),
                ('source', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'currency_rates',
                'managed': True,
                'unique_together': {('as_of_ts', 'base_ccy', 'quote_ccy')},
            },
        ),
        migrations.CreateModel(
            name='PricingPolicy',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('audience', models.TextField(unique=True)),
                ('caf_on_fx', models.BooleanField()),
                ('gst_applies', models.BooleanField()),
                ('gst_pct', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'pricing_policy',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('audience', models.TextField()),
                ('default_sell_currency', models.TextField()),
                ('gst_pct', models.DecimalField(decimal_places=2, max_digits=5)),
                ('disbursement_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('disbursement_cap', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'organizations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('email', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.organizations')),
            ],
            options={
                'db_table': 'contacts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('label', models.TextField()),
                ('address', models.TextField()),
                ('city', models.TextField(blank=True, null=True)),
                ('province', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.organizations')),
            ],
            options={
                'db_table': 'sites',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Quotes',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('sell_currency', models.TextField()),
                ('audience', models.TextField()),
                ('incoterms', models.TextField(blank=True, null=True)),
                ('created_ts', models.DateTimeField()),
                ('status', models.TextField()),
                ('meta', models.JSONField()),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.organizations')),
            ],
            options={
                'db_table': 'quotes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuoteLines',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('code', models.TextField()),
                ('description', models.TextField()),
                ('qty', models.DecimalField(decimal_places=3, max_digits=12)),
                ('unit', models.TextField()),
                ('unit_price', models.DecimalField(decimal_places=4, max_digits=12)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.TextField()),
                ('tax_pct', models.DecimalField(decimal_places=2, max_digits=5)),
                ('is_buy', models.BooleanField()),
                ('is_sell', models.BooleanField()),
                ('source_ratecard_id', models.BigIntegerField(blank=True, null=True)),
                ('computed_json', models.JSONField()),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.quotes')),
            ],
            options={
                'db_table': 'quote_lines',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='QuoteTotals',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('buy_total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('sell_total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('tax_total', models.DecimalField(decimal_places=2, max_digits=14)),
                ('margin_abs', models.DecimalField(decimal_places=2, max_digits=14)),
                ('margin_pct', models.DecimalField(decimal_places=3, max_digits=7)),
                ('quote', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='rate_engine.quotes')),
            ],
            options={
                'db_table': 'quote_totals',
                'managed': True,
            },
        ),
    ]
